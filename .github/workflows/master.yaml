name: Build Rust project

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]
        include:
          # Linux ARM64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            arch: arm64
          # Linux AMD64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            arch: amd64
          # macOS ARM64
          - os: macos-latest
            target: aarch64-apple-darwin
            arch: arm64
          # macOS AMD64
          - os: macos-latest
            target: x86_64-apple-darwin
            arch: amd64
          # Windows AMD64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            arch: amd64

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}

      - name: Install cross-compilation dependencies
        if: matrix.os == 'ubuntu-latest' && matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Prepare binary for upload (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          rm -f *.d
          mv lobster-rs lobster-rs-${{ matrix.os }}-${{ matrix.arch }}

      - name: Prepare binary for upload (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          move lobster-rs.exe lobster-rs-${{ matrix.os }}-${{ matrix.arch }}.exe

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: lobster-rs-${{ matrix.os }}-${{ matrix.arch }}
          path: target/${{ matrix.target }}/release/lobster-rs-*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: lobster-rs-*
          merge-multiple: true

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "release-${{ github.run_number }}-${{ github.event.after }}"
          release_name: "Release ${{ github.run_number }}"
          draft: false
          prerelease: false

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: lobster-rs-*
          tag: ${{ steps.create_release.outputs.tag_name }}
          overwrite: true
          file_glob: true
