name: Build Rust project
on:
  push:
    branches: [ "master" ]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x86_64, aarch64]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Rust
      uses: hecrj/setup-rust-action@v2
      with:
        rust-version: stable

    - name: Install cross-compilation targets
      run: |
        case ${{ matrix.arch }}-${{ matrix.os }} in
          x86_64-ubuntu-latest)
            rustup target add x86_64-unknown-linux-gnu ;;
          aarch64-ubuntu-latest)
            rustup target add aarch64-unknown-linux-gnu ;;
          x86_64-macos-latest)
            rustup target add x86_64-apple-darwin ;;
          aarch64-macos-latest)
            rustup target add aarch64-apple-darwin ;;
          x86_64-windows-latest)
            rustup target add x86_64-pc-windows-msvc ;;
          aarch64-windows-latest)
            rustup target add aarch64-pc-windows-msvc ;;
        esac

    - name: Build project
      run: |
        case ${{ matrix.arch }}-${{ matrix.os }} in
          x86_64-ubuntu-latest)
            cargo build --release --target x86_64-unknown-linux-gnu ;;
          aarch64-ubuntu-latest)
            cargo build --release --target aarch64-unknown-linux-gnu ;;
          x86_64-macos-latest)
            cargo build --release --target x86_64-apple-darwin ;;
          aarch64-macos-latest)
            cargo build --release --target aarch64-apple-darwin ;;
          x86_64-windows-latest)
            cargo build --release --target x86_64-pc-windows-msvc ;;
          aarch64-windows-latest)
            cargo build --release --target aarch64-pc-windows-msvc ;;
        esac

    - name: Move output binary
      run: |
        mkdir -p artifacts
        mv target/${{ matrix.arch }}-unknown-${{ matrix.os }}/release/lobster-rs artifacts/lobster-rs-${{ matrix.arch }}-${{ matrix.os }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: lobster-rs-${{ matrix.arch }}-${{ matrix.os }}
        path: artifacts/lobster-rs-${{ matrix.arch }}-${{ matrix.os }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: lobster-rs-*
        path: ./artifacts

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "release-${{ github.run_number }}-${{ github.event.after }}"
        release_name: "Release ${{ github.run_number }}"
        draft: false
        prerelease: false

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./artifacts/*
        tag: main
        overwrite: true
